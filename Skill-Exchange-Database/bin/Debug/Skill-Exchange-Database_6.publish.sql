/*
Deployment script for FYP_CONCEPT

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FYP_CONCEPT"
:setvar DefaultFilePrefix "FYP_CONCEPT"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Exchange]...';


GO
ALTER TABLE [dbo].[Exchange] DROP CONSTRAINT [DF__Exchange__Status__4BAC3F29];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Exchange]...';


GO
ALTER TABLE [dbo].[Exchange] DROP CONSTRAINT [FK__Exchange__Sender__4CA06362];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Exchange]...';


GO
ALTER TABLE [dbo].[Exchange] DROP CONSTRAINT [FK__Exchange__Recipi__4D94879B];


GO
PRINT N'Dropping unnamed constraint on [dbo].[ExchangeMessage]...';


GO
ALTER TABLE [dbo].[ExchangeMessage] DROP CONSTRAINT [FK__ExchangeM__Sende__4E88ABD4];


GO
PRINT N'Dropping unnamed constraint on [dbo].[ExchangeMessage]...';


GO
ALTER TABLE [dbo].[ExchangeMessage] DROP CONSTRAINT [FK__ExchangeM__Recip__4F7CD00D];


GO
PRINT N'Starting rebuilding table [dbo].[Exchange]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Exchange] (
    [Id]                     INT      IDENTITY (1, 1) NOT NULL,
    [Sender_Id]              INT      NOT NULL,
    [Recipient_Id]           INT      NOT NULL,
    [Status]                 TINYINT  DEFAULT 0 NULL,
    [Opened_TimeStamp]       DATETIME NULL,
    [Last_Message_TimeStamp] DATETIME NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Exchange])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Exchange] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Exchange] ([Id], [Sender_Id], [Recipient_Id], [Status], [Opened_TimeStamp], [Last_Message_TimeStamp])
        SELECT   [Id],
                 [Sender_Id],
                 [Recipient_Id],
                 [Status],
                 [Opened_TimeStamp],
                 [Last_Message_TimeStamp]
        FROM     [dbo].[Exchange]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Exchange] OFF;
    END

DROP TABLE [dbo].[Exchange];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Exchange]', N'Exchange';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ExchangeMessage]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExchangeMessage] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Sender_Id]    INT            NOT NULL,
    [Recipient_Id] INT            NOT NULL,
    [Body]         NVARCHAR (MAX) NOT NULL,
    [TimeStamp]    DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExchangeMessage])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExchangeMessage] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExchangeMessage] ([Id], [Sender_Id], [Recipient_Id], [Body], [TimeStamp])
        SELECT   [Id],
                 [Sender_Id],
                 [Recipient_Id],
                 [Body],
                 [TimeStamp]
        FROM     [dbo].[ExchangeMessage]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExchangeMessage] OFF;
    END

DROP TABLE [dbo].[ExchangeMessage];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExchangeMessage]', N'ExchangeMessage';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating unnamed constraint on [dbo].[Exchange]...';


GO
ALTER TABLE [dbo].[Exchange] WITH NOCHECK
    ADD FOREIGN KEY ([Sender_Id]) REFERENCES [dbo].[ApplicationUser] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Exchange]...';


GO
ALTER TABLE [dbo].[Exchange] WITH NOCHECK
    ADD FOREIGN KEY ([Recipient_Id]) REFERENCES [dbo].[ApplicationUser] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ExchangeMessage]...';


GO
ALTER TABLE [dbo].[ExchangeMessage] WITH NOCHECK
    ADD FOREIGN KEY ([Sender_Id]) REFERENCES [dbo].[ApplicationUser] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ExchangeMessage]...';


GO
ALTER TABLE [dbo].[ExchangeMessage] WITH NOCHECK
    ADD FOREIGN KEY ([Recipient_Id]) REFERENCES [dbo].[ApplicationUser] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Exchange'), OBJECT_ID(N'dbo.ExchangeMessage'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
